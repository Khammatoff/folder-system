version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy  # Ждем пока БД будет готова
    env_file:
      - .env 
    volumes:
      - ./.env:/app/.env  
      - ./app.log:/app/app.log
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD} #Берем из .env
      POSTGRES_DB: ${DB_NAME}           #Берем из .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

volumes:
  postgres_data: